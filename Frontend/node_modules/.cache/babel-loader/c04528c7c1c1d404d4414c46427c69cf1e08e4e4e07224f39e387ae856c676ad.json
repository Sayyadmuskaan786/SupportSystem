{"ast":null,"code":"var _jsxFileName = \"/home/muskaan/Desktop/Summer_Internship/new/src/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const tokenParam = params.get('token');\n    if (tokenParam) {\n      setToken(tokenParam);\n    } else {\n      setError('Invalid or missing token.');\n    }\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          newPassword\n        })\n      });\n      if (response.ok) {\n        setMessage('Password reset successful. You can now log in with your new password.');\n      } else {\n        const errorText = await response.text();\n        setError('Password reset failed: ' + errorText);\n      }\n    } catch (err) {\n      setError('Password reset failed: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-8 rounded shadow-md w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-6 text-center\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-600 mb-4\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), !message && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            className: \"block mb-1 font-medium\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"newPassword\",\n            type: \"password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            className: \"w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            required: true,\n            minLength: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"KaGTBWPmQRndfWWm+Bvmzv4q6wM=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassword","_s","token","setToken","newPassword","setNewPassword","message","setMessage","error","setError","params","URLSearchParams","window","location","search","tokenParam","get","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","target","required","minLength","_c","$RefreshReg$"],"sources":["/home/muskaan/Desktop/Summer_Internship/new/src/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ResetPassword() {\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const tokenParam = params.get('token');\n    if (tokenParam) {\n      setToken(tokenParam);\n    } else {\n      setError('Invalid or missing token.');\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/reset-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token, newPassword }),\n      });\n      if (response.ok) {\n        setMessage('Password reset successful. You can now log in with your new password.');\n      } else {\n        const errorText = await response.text();\n        setError('Password reset failed: ' + errorText);\n      }\n    } catch (err) {\n      setError('Password reset failed: ' + err.message);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n      <form onSubmit={handleSubmit} className=\"bg-white p-8 rounded shadow-md w-full max-w-md\">\n        <h2 className=\"text-2xl font-semibold mb-6 text-center\">Reset Password</h2>\n        {error && <p className=\"text-red-600 mb-4\">{error}</p>}\n        {message && <p className=\"text-green-600 mb-4\">{message}</p>}\n        {!message && (\n          <>\n            <div className=\"mb-4\">\n              <label htmlFor=\"newPassword\" className=\"block mb-1 font-medium\">\n                New Password\n              </label>\n              <input\n                id=\"newPassword\"\n                type=\"password\"\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n                className=\"w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                required\n                minLength={6}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition\"\n            >\n              Reset Password\n            </button>\n          </>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}