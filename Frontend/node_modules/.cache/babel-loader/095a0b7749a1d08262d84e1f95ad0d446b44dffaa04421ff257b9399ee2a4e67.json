{"ast":null,"code":"var _jsxFileName = \"/home/muskaan/Desktop/Summer_Internship/new/src/components/GoogleLoginButton.js\";\nimport React from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLoginButton = ({\n  onLoginSuccess,\n  onLoginFailure\n}) => {\n  const handleLoginSuccess = async credentialResponse => {\n    try {\n      const idToken = credentialResponse.credential;\n      const response = await fetch('http://localhost:8080/api/auth/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(idToken)\n      });\n      if (!response.ok) throw new Error('Google login failed');\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      onLoginSuccess(data);\n    } catch (error) {\n      console.error(error);\n      onLoginFailure(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n    onSuccess: handleLoginSuccess,\n    onError: () => onLoginFailure(new Error('Google login failed')),\n    useOneTap: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = GoogleLoginButton;\nexport default GoogleLoginButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"names":["React","GoogleLogin","jsxDEV","_jsxDEV","GoogleLoginButton","onLoginSuccess","onLoginFailure","handleLoginSuccess","credentialResponse","idToken","credential","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","localStorage","setItem","token","error","console","onSuccess","onError","useOneTap","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/muskaan/Desktop/Summer_Internship/new/src/components/GoogleLoginButton.js"],"sourcesContent":["import React from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\n\nconst GoogleLoginButton = ({ onLoginSuccess, onLoginFailure }) => {\n  const handleLoginSuccess = async (credentialResponse) => {\n    try {\n      const idToken = credentialResponse.credential;\n\n      const response = await fetch('http://localhost:8080/api/auth/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(idToken)\n      });\n\n      if (!response.ok) throw new Error('Google login failed');\n\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      onLoginSuccess(data);\n    } catch (error) {\n      console.error(error);\n      onLoginFailure(error);\n    }\n  };\n\n  return (\n    <GoogleLogin\n      onSuccess={handleLoginSuccess}\n      onError={() => onLoginFailure(new Error('Google login failed'))}\n      useOneTap\n    />\n  );\n};\n\nexport default GoogleLoginButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAe,CAAC,KAAK;EAChE,MAAMC,kBAAkB,GAAG,MAAOC,kBAAkB,IAAK;IACvD,IAAI;MACF,MAAMC,OAAO,GAAGD,kBAAkB,CAACE,UAAU;MAE7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MAExD,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;MACzCnB,cAAc,CAACe,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBnB,cAAc,CAACmB,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACEtB,OAAA,CAACF,WAAW;IACV0B,SAAS,EAAEpB,kBAAmB;IAC9BqB,OAAO,EAAEA,CAAA,KAAMtB,cAAc,CAAC,IAAIa,KAAK,CAAC,qBAAqB,CAAC,CAAE;IAChEU,SAAS;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEN,CAAC;AAACC,EAAA,GA/BI9B,iBAAiB;AAiCvB,eAAeA,iBAAiB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}