{"ast":null,"code":"var _jsxFileName = \"/home/muskaan/Desktop/Summer_Internship/new/src/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AdminSidebar from './AdminSidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard({\n  token,\n  userId\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [tickets, setTickets] = useState([]);\n  const [openTickets, setOpenTickets] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editCommentText, setEditCommentText] = useState('');\n  const [selectedTicketAssign, setSelectedTicketAssign] = useState(null);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const [availableAgents, setAvailableAgents] = useState([]);\n  const [showTickets, setShowTickets] = useState(true);\n  const [activeSection, setActiveSection] = useState('viewUsers');\n  const [profile, setProfile] = useState(null);\n  const [userFilter, setUserFilter] = useState('all'); // 'all', 'agents', 'customers'\n\n  useEffect(() => {\n    console.log(\"useEffect triggered for activeSection:\", activeSection);\n    if (!token) return;\n    if (activeSection === 'viewComments') {\n      console.log(\"Fetching comments for admin view\");\n      setLoading(true);\n      const authHeader = `Bearer ${token}`;\n      fetch('http://localhost:8080/api/comments/getcomments', {\n        headers: {\n          Authorization: authHeader\n        }\n      }).then(res => {\n        if (!res.ok) throw new Error('Failed to fetch comments');\n        return res.json();\n      }).then(data => {\n        setComments(data);\n        setError(null);\n      }).catch(err => setError(err.message)).finally(() => setLoading(false));\n    } else if (activeSection === 'viewUsers') {\n      setLoading(true);\n      const authHeader = `Bearer ${token}`;\n      let url = 'http://localhost:8080/api/users';\n      if (userFilter === 'agents') {\n        url = 'http://localhost:8080/api/users/agents';\n      } else if (userFilter === 'customers') {\n        url = 'http://localhost:8080/api/users/customers';\n      }\n      fetch(url, {\n        headers: {\n          Authorization: authHeader\n        }\n      }).then(res => {\n        if (!res.ok) throw new Error('Failed to fetch users');\n        return res.json();\n      }).then(data => {\n        setUsers(data);\n        setError(null);\n      }).catch(err => setError(err.message)).finally(() => setLoading(false));\n    } else {\n      setLoading(true);\n      const authHeader = `Bearer ${token}`;\n      fetch('http://localhost:8080/api/tickets/gettickets', {\n        headers: {\n          Authorization: authHeader\n        }\n      }).then(res => {\n        if (!res.ok) throw new Error('Failed to fetch tickets');\n        return res.json();\n      }).then(data => {\n        setTickets(data);\n        setOpenTickets(data.filter(ticket => ticket.state === 'OPEN'));\n        setError(null);\n      }).catch(err => setError(err.message)).finally(() => setLoading(false));\n    }\n  }, [token, activeSection, userFilter]);\n  useEffect(() => {\n    if (activeSection === 'viewProfile' && userId && token) {\n      setLoading(true);\n      fetch(`http://localhost:8080/api/users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        if (!res.ok) throw new Error('Failed to fetch profile');\n        return res.json();\n      }).then(data => {\n        setProfile(data);\n        setError(null);\n      }).catch(err => setError(err.message)).finally(() => setLoading(false));\n    }\n  }, [activeSection, userId, token]);\n  useEffect(() => {\n    if (!token) return;\n    const authHeader = `Bearer ${token}`;\n    fetch('http://localhost:8080/api/users/agents', {\n      headers: {\n        Authorization: authHeader\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error('Failed to fetch agents');\n      return res.json();\n    }).then(data => {\n      setAvailableAgents(data);\n      setError(null);\n    }).catch(err => setError(err.message));\n  }, [token]);\n  const handleAddComment = () => {\n    if (newComment.trim() && selectedTicketAssign) {\n      fetch(`http://localhost:8080/api/comments/ticket/${selectedTicketAssign}`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: newComment\n        })\n      }).then(res => {\n        if (!res.ok) throw new Error('Failed to add comment');\n        return res.json();\n      }).then(newCommentData => {\n        setComments(prev => [...prev, newCommentData]);\n        setNewComment('');\n        setError(null);\n      }).catch(err => setError(err.message));\n    }\n  };\n  const handleEditComment = (commentId, text) => {\n    setEditCommentId(commentId);\n    setEditCommentText(text);\n  };\n  const handleUpdateComment = () => {\n    if (editCommentText.trim() && editCommentId !== null) {\n      fetch(`http://localhost:8080/api/comments/${editCommentId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: editCommentText\n        })\n      }).then(res => {\n        if (!res.ok) throw new Error('Failed to update comment');\n        return res.json();\n      }).then(updatedComment => {\n        setComments(prev => prev.map(comment => comment.id === editCommentId ? updatedComment : comment));\n        setEditCommentId(null);\n        setEditCommentText('');\n        setError(null);\n      }).catch(err => setError(err.message));\n    }\n  };\n  const deleteComment = id => {\n    fetch(`http://localhost:8080/api/comments/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => setComments(comments.filter(comment => comment.id !== id))).catch(err => setError(err.message));\n  };\n  const assignTicket = () => {\n    if (selectedTicketAssign && selectedAgent) {\n      fetch(`http://localhost:8080/api/tickets/${selectedTicketAssign}/assign/${selectedAgent}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (!res.ok) throw new Error('Failed to assign ticket');\n        setTickets(prev => prev.map(ticket => ticket.id === parseInt(selectedTicketAssign) ? {\n          ...ticket,\n          assignedAgent: {\n            id: parseInt(selectedAgent)\n          }\n        } : ticket));\n        setSelectedTicketAssign(null);\n        setSelectedAgent(null);\n        setError(null);\n      }).catch(err => setError(err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen font-poppins bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(AdminSidebar, {\n      onSelect: setActiveSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-grow p-8 ml-64 max-w-6xl mx-auto\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }, this), activeSection === 'viewUsers' && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4 text-blue-800\",\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setUserFilter('agents'),\n            className: `mr-2 px-4 py-2 rounded ${userFilter === 'agents' ? 'bg-blue-600 text-white' : 'bg-gray-300'}`,\n            children: \"Show All Agents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setUserFilter('customers'),\n            className: `px-4 py-2 rounded ${userFilter === 'customers' ? 'bg-blue-600 text-white' : 'bg-gray-300'}`,\n            children: \"Show All Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setUserFilter('all'),\n            className: `ml-2 px-4 py-2 rounded ${userFilter === 'all' ? 'bg-blue-600 text-white' : 'bg-gray-300'}`,\n            children: \"Show All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full bg-white border border-gray-300 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-left\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-left\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-left\",\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: user.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 13\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 3\n      }, this), activeSection === 'viewTickets' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4 text-blue-800\",\n            children: [\"Tickets (Total: \", tickets.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full bg-white border border-gray-300 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border px-4 py-2 text-left\",\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border px-4 py-2 text-left\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border px-4 py-2 text-left\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border px-4 py-2 text-left\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border px-4 py-2 text-left\",\n                  children: \"Created By ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"border px-4 py-2 text-left\",\n                  children: \"Agent ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: ticket.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: ticket.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: ticket.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: ticket.state\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: ticket.createdBy ? ticket.createdBy.id : 'null'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: ticket.assignedAgent ? ticket.assignedAgent.id : ticket.state === 'ASSIGNED' ? 'Assigned' : 'Unassigned'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this)]\n              }, ticket.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), activeSection === 'assignTickets' && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4 text-blue-800\",\n          children: \"Assign Tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ticketSelect\",\n            className: \"block mb-1 font-medium\",\n            children: \"Select Ticket\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"ticketSelect\",\n            value: selectedTicketAssign || '',\n            onChange: e => setSelectedTicketAssign(e.target.value),\n            className: \"border border-gray-300 rounded px-3 py-2 w-full max-w-xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a ticket\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), openTickets.map(ticket => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ticket.id,\n              children: [ticket.title, \" (Assigned to: \", ticket.assignedAgent ? ticket.assignedAgent.username : 'Unassigned', \")\"]\n            }, ticket.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"agentSelect\",\n            className: \"block mb-1 font-medium\",\n            children: \"Assign to Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"agentSelect\",\n            value: selectedAgent || '',\n            onChange: e => setSelectedAgent(e.target.value),\n            className: \"border border-gray-300 rounded px-3 py-2 w-full max-w-xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select an agent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), availableAgents.map(agent => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: agent.id,\n              children: agent.username\n            }, agent.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: assignTicket,\n          disabled: !selectedTicketAssign || !selectedAgent,\n          className: \"bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50\",\n          children: \"Assign Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), activeSection === 'viewProfile' && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mb-8 flex flex-col items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-semibold mb-6 text-blue-800\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading profile...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 23\n        }, this), profile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center bg-white p-8 rounded-lg shadow-lg w-full max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-24 h-24 rounded-full bg-blue-600 flex items-center justify-center shadow-lg mx-auto overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"download.jpeg\",\n                alt: \"Profile Icon\",\n                className: \"w-full h-full object-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 54\n              }, this), \" \", profile.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Username:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 54\n              }, this), \" \", profile.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 54\n              }, this), \" \", profile.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Role:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 54\n              }, this), \" \", profile.role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), activeSection === 'viewComments' && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4 text-blue-800\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full bg-white border border-gray-300 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-left\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-left\",\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-left\",\n                children: \"Ticket ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-left\",\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-left\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: comment.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [comment.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-gray-500\",\n                    children: new Date(comment.createdAt).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: comment.ticketTitle || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: comment.username || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteComment(comment.id),\n                  className: \"bg-red-600 text-white px-2 py-1 rounded\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this)]\n            }, comment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), editCommentId !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editCommentText,\n            onChange: e => setEditCommentText(e.target.value),\n            className: \"w-full border border-gray-300 rounded p-2\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdateComment,\n            className: \"bg-blue-600 text-white px-4 py-2 rounded mt-2\",\n            children: \"Update Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditCommentId(null),\n            className: \"ml-2 bg-gray-400 text-white px-4 py-2 rounded mt-2\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"fxUTwjLlJcOZ/TEkzYEbZ7y9pzI=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\n// import React, { useState, useEffect } from 'react';\n// import AdminSidebar from './AdminSidebar';\n\n// function AdminDashboard({ token, userId }) {\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [users, setUsers] = useState([]);\n//   const [tickets, setTickets] = useState([]);\n//   const [openTickets, setOpenTickets] = useState([]);\n//   const [comments, setComments] = useState([]);\n//   const [newComment, setNewComment] = useState('');\n//   const [editCommentId, setEditCommentId] = useState(null);\n//   const [editCommentText, setEditCommentText] = useState('');\n//   const [selectedTicketAssign, setSelectedTicketAssign] = useState(null);\n//   const [selectedAgent, setSelectedAgent] = useState(null);\n//   const [availableAgents, setAvailableAgents] = useState([]);\n//   const [showTickets, setShowTickets] = useState(true);\n//   const [activeSection, setActiveSection] = useState('viewUsers');\n//   const [profile, setProfile] = useState(null);\n\n//   useEffect(() => {\n//     console.log(\"useEffect triggered for activeSection:\", activeSection);\n//     if (!token) return;\n//     if (activeSection === 'viewComments') {\n//       console.log(\"Fetching comments for admin view\");\n//       setLoading(true);\n//       const authHeader = `Bearer ${token}`;\n//       fetch('http://localhost:8080/api/comments/getcomments', {\n//         headers: { Authorization: authHeader }\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to fetch comments');\n//           return res.json();\n//         })\n//         .then(data => {\n//           setComments(data);\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message))\n//         .finally(() => setLoading(false));\n//     } else {\n//       setLoading(true);\n//       const authHeader = `Bearer ${token}`;\n\n//       fetch('http://localhost:8080/api/users', {\n//         headers: { Authorization: authHeader },\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to fetch users');\n//           return res.json();\n//         })\n//         .then(data => {\n//           setUsers(data);\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message))\n//         .finally(() => setLoading(false));\n\n//       fetch('http://localhost:8080/api/tickets/gettickets', {\n//         headers: { Authorization: authHeader },\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to fetch tickets');\n//           return res.json();\n//         })\n//         .then(data => {\n//           setTickets(data);\n//           setOpenTickets(data.filter(ticket => ticket.state === 'OPEN'));\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message))\n//         .finally(() => setLoading(false));\n//     }\n//   }, [token, activeSection]);\n\n//   useEffect(() => {\n//     if (activeSection === 'viewProfile' && userId && token) {\n//       setLoading(true);\n//       fetch(`http://localhost:8080/api/users/${userId}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to fetch profile');\n//           return res.json();\n//         })\n//         .then(data => {\n//           setProfile(data);\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message))\n//         .finally(() => setLoading(false));\n//     }\n//   }, [activeSection, userId, token]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     const authHeader = `Bearer ${token}`;\n//     fetch('http://localhost:8080/api/users/agents', {\n//       headers: { Authorization: authHeader },\n//     })\n//       .then(res => {\n//         if (!res.ok) throw new Error('Failed to fetch agents');\n//         return res.json();\n//       })\n//       .then(data => {\n//         setAvailableAgents(data);\n//         setError(null);\n//       })\n//       .catch(err => setError(err.message));\n//   }, [token]);\n\n//   const handleAddComment = () => {\n//     if (newComment.trim() && selectedTicketAssign) {\n//       fetch(`http://localhost:8080/api/comments/ticket/${selectedTicketAssign}`, {\n//         method: 'POST',\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           content: newComment,\n//         }),\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to add comment');\n//           return res.json();\n//         })\n//         .then(newCommentData => {\n//           setComments(prev => [...prev, newCommentData]);\n//           setNewComment('');\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message));\n//     }\n//   };\n\n//   const handleEditComment = (commentId, text) => {\n//     setEditCommentId(commentId);\n//     setEditCommentText(text);\n//   };\n\n//   const handleUpdateComment = () => {\n//     if (editCommentText.trim() && editCommentId !== null) {\n//       fetch(`http://localhost:8080/api/comments/${editCommentId}`, {\n//         method: 'PUT',\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ content: editCommentText }),\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to update comment');\n//           return res.json();\n//         })\n//         .then(updatedComment => {\n//           setComments(prev =>\n//             prev.map(comment =>\n//               comment.id === editCommentId ? updatedComment : comment\n//             )\n//           );\n//           setEditCommentId(null);\n//           setEditCommentText('');\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message));\n//     }\n//   };\n\n//   const deleteComment = (id) => {\n//     fetch(`http://localhost:8080/api/comments/${id}`, {\n//       method: 'DELETE',\n//       headers: { Authorization: `Bearer ${token}` },\n//     })\n//       .then(() => setComments(comments.filter(comment => comment.id !== id)))\n//       .catch(err => setError(err.message));\n//   };\n\n//   const assignTicket = () => {\n//     if (selectedTicketAssign && selectedAgent) {\n//       fetch(`http://localhost:8080/api/tickets/${selectedTicketAssign}/assign/${selectedAgent}`, {\n//         method: 'PUT',\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           'Content-Type': 'application/json',\n//         },\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to assign ticket');\n//           setTickets(prev =>\n//             prev.map(ticket =>\n//               ticket.id === parseInt(selectedTicketAssign)\n//                 ? { ...ticket, assignedAgent: { id: parseInt(selectedAgent) } }\n//                 : ticket\n//             )\n//           );\n//           setSelectedTicketAssign(null);\n//           setSelectedAgent(null);\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message));\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex min-h-screen font-poppins bg-gray-100\">\n//       <AdminSidebar onSelect={setActiveSection} />\n//       <main className=\"flex-grow p-8 ml-64 max-w-6xl mx-auto\">\n\n//         {error && <p className=\"text-red-600 mb-4\">{error}</p>}\n\n// {activeSection === 'viewUsers' && (\n//   <section className=\"mb-8\">\n//     <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Users</h2>\n//     <table className=\"min-w-full bg-white border border-gray-300 rounded\">\n//       <thead>\n//         <tr>\n//           <th className=\"border px-4 py-2 text-left\">ID</th>\n//           <th className=\"border px-4 py-2 text-left\">Username</th>\n//           <th className=\"border px-4 py-2 text-left\">Role</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {users.map(user => (\n//           <tr key={user.id} className=\"hover:bg-gray-100\">\n//             <td className=\"border px-4 py-2\">{user.id}</td>\n//             <td className=\"border px-4 py-2\">{user.username}</td>\n//             <td className=\"border px-4 py-2\">{user.role}</td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   </section>\n// )}\n\n//         {activeSection === 'viewTickets' && (\n//           <>\n//             <section className=\"mb-8\">\n//               <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Tickets (Total: {tickets.length})</h2>\n//               <table className=\"min-w-full bg-white border border-gray-300 rounded\">\n//               <thead>\n//                 <tr>\n//                   <th className=\"border px-4 py-2 text-left\">ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">Title</th>\n//                   <th className=\"border px-4 py-2 text-left\">Description</th>\n//                   <th className=\"border px-4 py-2 text-left\">Status</th>\n//                   <th className=\"border px-4 py-2 text-left\">Created By ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">Agent ID</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {tickets.map(ticket => (\n//                   <tr key={ticket.id} className=\"hover:bg-gray-100\">\n//                     <td className=\"border px-4 py-2\">{ticket.id}</td>\n//                     <td className=\"border px-4 py-2\">{ticket.title}</td>\n//                     <td className=\"border px-4 py-2\">{ticket.description}</td>\n//                     <td className=\"border px-4 py-2\">{ticket.state}</td>\n//                     <td className=\"border px-4 py-2\">{ticket.createdBy ? ticket.createdBy.id : 'null'}</td>\n//                     <td className=\"border px-4 py-2\">\n//                       {ticket.assignedAgent\n//                         ? ticket.assignedAgent.id\n//                         : ticket.state === 'ASSIGNED'\n//                         ? 'Assigned'\n//                         : 'Unassigned'}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//               </table>\n//             </section>\n//           </>\n//         )}\n\n//         {activeSection === 'assignTickets' && (\n//           <section className=\"mb-8\">\n//             <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Assign Tickets</h2>\n//             <div className=\"mb-4\">\n//               <label htmlFor=\"ticketSelect\" className=\"block mb-1 font-medium\">Select Ticket</label>\n//               <select\n//                 id=\"ticketSelect\"\n//                 value={selectedTicketAssign || ''}\n//                 onChange={(e) => setSelectedTicketAssign(e.target.value)}\n//                 className=\"border border-gray-300 rounded px-3 py-2 w-full max-w-xs\"\n//               >\n//                 <option value=\"\" disabled>Select a ticket</option>\n//                 {openTickets.map(ticket => (\n//                   <option key={ticket.id} value={ticket.id}>\n//                     {ticket.title} (Assigned to: {ticket.assignedAgent ? ticket.assignedAgent.username : 'Unassigned'})\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"mb-4\">\n//               <label htmlFor=\"agentSelect\" className=\"block mb-1 font-medium\">Assign to Agent</label>\n//               <select\n//                 id=\"agentSelect\"\n//                 value={selectedAgent || ''}\n//                 onChange={(e) => setSelectedAgent(e.target.value)}\n//                 className=\"border border-gray-300 rounded px-3 py-2 w-full max-w-xs\"\n//               >\n//                 <option value=\"\" disabled>Select an agent</option>\n//                 {availableAgents.map(agent => (\n//                   <option key={agent.id} value={agent.id}>{agent.username}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <button\n//               onClick={assignTicket}\n//               disabled={!selectedTicketAssign || !selectedAgent}\n//               className=\"bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n//             >\n//               Assign Ticket\n//             </button>\n//           </section>\n//         )}\n\n//         {activeSection === 'viewProfile' && (\n//           <section className=\"mb-8 flex flex-col items-center justify-center\">\n//             <h2 className=\"text-3xl font-semibold mb-6 text-blue-800\">Profile</h2>\n//             {loading && <p>Loading profile...</p>}\n//             {error && <p className=\"text-red-600\">{error}</p>}\n//             {profile && (\n//               <div className=\"flex flex-col items-center bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\n//                 <div className=\"mb-6\">\n//                 <div className=\"w-24 h-24 rounded-full bg-blue-600 flex items-center justify-center shadow-lg mx-auto overflow-hidden\">\n//                   <img\n//                     src=\"download.jpeg\"\n//                     alt=\"Profile Icon\"\n//                     className=\"w-full h-full object-cover\"\n//                   />\n//                 </div>\n//                 </div>\n//                 <div className=\"text-center\">\n//                   <p className=\"text-lg font-medium\"><strong>ID:</strong> {profile.id}</p>\n//                   <p className=\"text-lg font-medium\"><strong>Username:</strong> {profile.username}</p>\n//                   <p className=\"text-lg font-medium\"><strong>Email:</strong> {profile.email}</p>\n//                   <p className=\"text-lg font-medium\"><strong>Role:</strong> {profile.role}</p>\n//                 </div>\n//               </div>\n//             )}\n//           </section>\n//         )}\n\n//         {activeSection === 'viewComments' && (\n//           <section className=\"mb-8\">\n//             <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Comments</h2>\n//             <table className=\"min-w-full bg-white border border-gray-300 rounded\">\n//               <thead>\n//                 <tr>\n//                   <th className=\"border px-4 py-2 text-left\">ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">Content</th>\n//                   <th className=\"border px-4 py-2 text-left\">Ticket ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">User ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {comments.map(comment => (\n//                   <tr key={comment.id} className=\"hover:bg-gray-100\">\n//                     <td className=\"border px-4 py-2\">{comment.id}</td>\n//                     <td className=\"border px-4 py-2\">\n//                       <div>\n//                         {comment.content}\n//                         <br />\n//                         <small className=\"text-gray-500\">\n//                           {new Date(comment.createdAt).toLocaleString()}\n//                         </small>\n//                       </div>\n//                     </td>\n//                     <td className=\"border px-4 py-2\">{comment.ticketTitle || 'N/A'}</td>\n//                     <td className=\"border px-4 py-2\">{comment.username || 'N/A'}</td>\n//                     <td className=\"border px-4 py-2\">\n//                       {/* Edit button removed as per request to disable edit option for admin */}\n//                       {/* <button\n//                         onClick={() => handleEditComment(comment.id, comment.content)}\n//                         className=\"bg-yellow-400 text-white px-2 py-1 rounded mr-2\"\n//                       >\n//                         Edit\n//                       </button> */}\n//                       <button\n//                         onClick={() => deleteComment(comment.id)}\n//                         className=\"bg-red-600 text-white px-2 py-1 rounded\"\n//                       >\n//                         Delete\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {editCommentId !== null && (\n//               <div className=\"mt-4\">\n//                 <textarea\n//                   value={editCommentText}\n//                   onChange={(e) => setEditCommentText(e.target.value)}\n//                   className=\"w-full border border-gray-300 rounded p-2\"\n//                   rows={4}\n//                 />\n//                 <button\n//                   onClick={handleUpdateComment}\n//                   className=\"bg-blue-600 text-white px-4 py-2 rounded mt-2\"\n//                 >\n//                   Update Comment\n//                 </button>\n//                 <button\n//                   onClick={() => setEditCommentId(null)}\n//                   className=\"ml-2 bg-gray-400 text-white px-4 py-2 rounded mt-2\"\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             )}\n//           </section>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","AdminSidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","token","userId","_s","loading","setLoading","error","setError","users","setUsers","tickets","setTickets","openTickets","setOpenTickets","comments","setComments","newComment","setNewComment","editCommentId","setEditCommentId","editCommentText","setEditCommentText","selectedTicketAssign","setSelectedTicketAssign","selectedAgent","setSelectedAgent","availableAgents","setAvailableAgents","showTickets","setShowTickets","activeSection","setActiveSection","profile","setProfile","userFilter","setUserFilter","console","log","authHeader","fetch","headers","Authorization","then","res","ok","Error","json","data","catch","err","message","finally","url","filter","ticket","state","handleAddComment","trim","method","body","JSON","stringify","content","newCommentData","prev","handleEditComment","commentId","text","handleUpdateComment","updatedComment","map","comment","id","deleteComment","assignTicket","parseInt","assignedAgent","className","children","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","onClick","user","username","role","length","title","description","createdBy","htmlFor","value","onChange","e","target","disabled","agent","src","alt","email","Date","createdAt","toLocaleString","ticketTitle","rows","_c","$RefreshReg$"],"sources":["/home/muskaan/Desktop/Summer_Internship/new/src/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AdminSidebar from './AdminSidebar';\n\nfunction AdminDashboard({ token, userId }) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [tickets, setTickets] = useState([]);\n  const [openTickets, setOpenTickets] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editCommentText, setEditCommentText] = useState('');\n  const [selectedTicketAssign, setSelectedTicketAssign] = useState(null);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const [availableAgents, setAvailableAgents] = useState([]);\n  const [showTickets, setShowTickets] = useState(true);\n  const [activeSection, setActiveSection] = useState('viewUsers');\n  const [profile, setProfile] = useState(null);\n  const [userFilter, setUserFilter] = useState('all'); // 'all', 'agents', 'customers'\n\n  useEffect(() => {\n    console.log(\"useEffect triggered for activeSection:\", activeSection);\n    if (!token) return;\n    if (activeSection === 'viewComments') {\n      console.log(\"Fetching comments for admin view\");\n      setLoading(true);\n      const authHeader = `Bearer ${token}`;\n      fetch('http://localhost:8080/api/comments/getcomments', {\n        headers: { Authorization: authHeader }\n      })\n        .then(res => {\n          if (!res.ok) throw new Error('Failed to fetch comments');\n          return res.json();\n        })\n        .then(data => {\n          setComments(data);\n          setError(null);\n        })\n        .catch(err => setError(err.message))\n        .finally(() => setLoading(false));\n    } else if (activeSection === 'viewUsers') {\n      setLoading(true);\n      const authHeader = `Bearer ${token}`;\n      let url = 'http://localhost:8080/api/users';\n      if (userFilter === 'agents') {\n        url = 'http://localhost:8080/api/users/agents';\n      } else if (userFilter === 'customers') {\n        url = 'http://localhost:8080/api/users/customers';\n      }\n      fetch(url, {\n        headers: { Authorization: authHeader },\n      })\n        .then(res => {\n          if (!res.ok) throw new Error('Failed to fetch users');\n          return res.json();\n        })\n        .then(data => {\n          setUsers(data);\n          setError(null);\n        })\n        .catch(err => setError(err.message))\n        .finally(() => setLoading(false));\n    } else {\n      setLoading(true);\n      const authHeader = `Bearer ${token}`;\n\n      fetch('http://localhost:8080/api/tickets/gettickets', {\n        headers: { Authorization: authHeader },\n      })\n        .then(res => {\n          if (!res.ok) throw new Error('Failed to fetch tickets');\n          return res.json();\n        })\n        .then(data => {\n          setTickets(data);\n          setOpenTickets(data.filter(ticket => ticket.state === 'OPEN'));\n          setError(null);\n        })\n        .catch(err => setError(err.message))\n        .finally(() => setLoading(false));\n    }\n  }, [token, activeSection, userFilter]);\n\n  useEffect(() => {\n    if (activeSection === 'viewProfile' && userId && token) {\n      setLoading(true);\n      fetch(`http://localhost:8080/api/users/${userId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then(res => {\n          if (!res.ok) throw new Error('Failed to fetch profile');\n          return res.json();\n        })\n        .then(data => {\n          setProfile(data);\n          setError(null);\n        })\n        .catch(err => setError(err.message))\n        .finally(() => setLoading(false));\n    }\n  }, [activeSection, userId, token]);\n\n  useEffect(() => {\n    if (!token) return;\n    const authHeader = `Bearer ${token}`;\n    fetch('http://localhost:8080/api/users/agents', {\n      headers: { Authorization: authHeader },\n    })\n      .then(res => {\n        if (!res.ok) throw new Error('Failed to fetch agents');\n        return res.json();\n      })\n      .then(data => {\n        setAvailableAgents(data);\n        setError(null);\n      })\n      .catch(err => setError(err.message));\n  }, [token]);\n\n  const handleAddComment = () => {\n    if (newComment.trim() && selectedTicketAssign) {\n      fetch(`http://localhost:8080/api/comments/ticket/${selectedTicketAssign}`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          content: newComment,\n        }),\n      })\n        .then(res => {\n          if (!res.ok) throw new Error('Failed to add comment');\n          return res.json();\n        })\n        .then(newCommentData => {\n          setComments(prev => [...prev, newCommentData]);\n          setNewComment('');\n          setError(null);\n        })\n        .catch(err => setError(err.message));\n    }\n  };\n\n  const handleEditComment = (commentId, text) => {\n    setEditCommentId(commentId);\n    setEditCommentText(text);\n  };\n\n  const handleUpdateComment = () => {\n    if (editCommentText.trim() && editCommentId !== null) {\n      fetch(`http://localhost:8080/api/comments/${editCommentId}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ content: editCommentText }),\n      })\n        .then(res => {\n          if (!res.ok) throw new Error('Failed to update comment');\n          return res.json();\n        })\n        .then(updatedComment => {\n          setComments(prev =>\n            prev.map(comment =>\n              comment.id === editCommentId ? updatedComment : comment\n            )\n          );\n          setEditCommentId(null);\n          setEditCommentText('');\n          setError(null);\n        })\n        .catch(err => setError(err.message));\n    }\n  };\n\n  const deleteComment = (id) => {\n    fetch(`http://localhost:8080/api/comments/${id}`, {\n      method: 'DELETE',\n      headers: { Authorization: `Bearer ${token}` },\n    })\n      .then(() => setComments(comments.filter(comment => comment.id !== id)))\n      .catch(err => setError(err.message));\n  };\n\n  const assignTicket = () => {\n    if (selectedTicketAssign && selectedAgent) {\n      fetch(`http://localhost:8080/api/tickets/${selectedTicketAssign}/assign/${selectedAgent}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(res => {\n          if (!res.ok) throw new Error('Failed to assign ticket');\n          setTickets(prev =>\n            prev.map(ticket =>\n              ticket.id === parseInt(selectedTicketAssign)\n                ? { ...ticket, assignedAgent: { id: parseInt(selectedAgent) } }\n                : ticket\n            )\n          );\n          setSelectedTicketAssign(null);\n          setSelectedAgent(null);\n          setError(null);\n        })\n        .catch(err => setError(err.message));\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen font-poppins bg-gray-100\">\n      <AdminSidebar onSelect={setActiveSection} />\n      <main className=\"flex-grow p-8 ml-64 max-w-6xl mx-auto\">\n\n        {error && <p className=\"text-red-600 mb-4\">{error}</p>}\n\n{activeSection === 'viewUsers' && (\n  <section className=\"mb-8\">\n    <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Users</h2>\n    <div className=\"mb-4\">\n      <button\n        onClick={() => setUserFilter('agents')}\n        className={`mr-2 px-4 py-2 rounded ${userFilter === 'agents' ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}\n      >\n        Show All Agents\n      </button>\n      <button\n        onClick={() => setUserFilter('customers')}\n        className={`px-4 py-2 rounded ${userFilter === 'customers' ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}\n      >\n        Show All Customers\n      </button>\n      <button\n        onClick={() => setUserFilter('all')}\n        className={`ml-2 px-4 py-2 rounded ${userFilter === 'all' ? 'bg-blue-600 text-white' : 'bg-gray-300'}`}\n      >\n        Show All Users\n      </button>\n    </div>\n    <table className=\"min-w-full bg-white border border-gray-300 rounded\">\n      <thead>\n        <tr>\n          <th className=\"border px-4 py-2 text-left\">ID</th>\n          <th className=\"border px-4 py-2 text-left\">Username</th>\n          <th className=\"border px-4 py-2 text-left\">Role</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.map(user => (\n          <tr key={user.id} className=\"hover:bg-gray-100\">\n            <td className=\"border px-4 py-2\">{user.id}</td>\n            <td className=\"border px-4 py-2\">{user.username}</td>\n            <td className=\"border px-4 py-2\">{user.role}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </section>\n)}\n\n        {activeSection === 'viewTickets' && (\n          <>\n            <section className=\"mb-8\">\n              <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Tickets (Total: {tickets.length})</h2>\n              <table className=\"min-w-full bg-white border border-gray-300 rounded\">\n              <thead>\n                <tr>\n                  <th className=\"border px-4 py-2 text-left\">ID</th>\n                  <th className=\"border px-4 py-2 text-left\">Title</th>\n                  <th className=\"border px-4 py-2 text-left\">Description</th>\n                  <th className=\"border px-4 py-2 text-left\">Status</th>\n                  <th className=\"border px-4 py-2 text-left\">Created By ID</th>\n                  <th className=\"border px-4 py-2 text-left\">Agent ID</th>\n                </tr>\n              </thead>\n              <tbody>\n                {tickets.map(ticket => (\n                  <tr key={ticket.id} className=\"hover:bg-gray-100\">\n                    <td className=\"border px-4 py-2\">{ticket.id}</td>\n                    <td className=\"border px-4 py-2\">{ticket.title}</td>\n                    <td className=\"border px-4 py-2\">{ticket.description}</td>\n                    <td className=\"border px-4 py-2\">{ticket.state}</td>\n                    <td className=\"border px-4 py-2\">{ticket.createdBy ? ticket.createdBy.id : 'null'}</td>\n                    <td className=\"border px-4 py-2\">\n                      {ticket.assignedAgent\n                        ? ticket.assignedAgent.id\n                        : ticket.state === 'ASSIGNED'\n                        ? 'Assigned'\n                        : 'Unassigned'}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n              </table>\n            </section>\n          </>\n        )}\n\n        {activeSection === 'assignTickets' && (\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Assign Tickets</h2>\n            <div className=\"mb-4\">\n              <label htmlFor=\"ticketSelect\" className=\"block mb-1 font-medium\">Select Ticket</label>\n              <select\n                id=\"ticketSelect\"\n                value={selectedTicketAssign || ''}\n                onChange={(e) => setSelectedTicketAssign(e.target.value)}\n                className=\"border border-gray-300 rounded px-3 py-2 w-full max-w-xs\"\n              >\n                <option value=\"\" disabled>Select a ticket</option>\n                {openTickets.map(ticket => (\n                  <option key={ticket.id} value={ticket.id}>\n                    {ticket.title} (Assigned to: {ticket.assignedAgent ? ticket.assignedAgent.username : 'Unassigned'})\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"mb-4\">\n              <label htmlFor=\"agentSelect\" className=\"block mb-1 font-medium\">Assign to Agent</label>\n              <select\n                id=\"agentSelect\"\n                value={selectedAgent || ''}\n                onChange={(e) => setSelectedAgent(e.target.value)}\n                className=\"border border-gray-300 rounded px-3 py-2 w-full max-w-xs\"\n              >\n                <option value=\"\" disabled>Select an agent</option>\n                {availableAgents.map(agent => (\n                  <option key={agent.id} value={agent.id}>{agent.username}</option>\n                ))}\n              </select>\n            </div>\n            <button\n              onClick={assignTicket}\n              disabled={!selectedTicketAssign || !selectedAgent}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n            >\n              Assign Ticket\n            </button>\n          </section>\n        )}\n\n        {activeSection === 'viewProfile' && (\n          <section className=\"mb-8 flex flex-col items-center justify-center\">\n            <h2 className=\"text-3xl font-semibold mb-6 text-blue-800\">Profile</h2>\n            {loading && <p>Loading profile...</p>}\n            {error && <p className=\"text-red-600\">{error}</p>}\n            {profile && (\n              <div className=\"flex flex-col items-center bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\n                <div className=\"mb-6\">\n                <div className=\"w-24 h-24 rounded-full bg-blue-600 flex items-center justify-center shadow-lg mx-auto overflow-hidden\">\n                  <img\n                    src=\"download.jpeg\"\n                    alt=\"Profile Icon\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-lg font-medium\"><strong>ID:</strong> {profile.id}</p>\n                  <p className=\"text-lg font-medium\"><strong>Username:</strong> {profile.username}</p>\n                  <p className=\"text-lg font-medium\"><strong>Email:</strong> {profile.email}</p>\n                  <p className=\"text-lg font-medium\"><strong>Role:</strong> {profile.role}</p>\n                </div>\n              </div>\n            )}\n          </section>\n        )}\n\n        {activeSection === 'viewComments' && (\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Comments</h2>\n            <table className=\"min-w-full bg-white border border-gray-300 rounded\">\n              <thead>\n                <tr>\n                  <th className=\"border px-4 py-2 text-left\">ID</th>\n                  <th className=\"border px-4 py-2 text-left\">Content</th>\n                  <th className=\"border px-4 py-2 text-left\">Ticket ID</th>\n                  <th className=\"border px-4 py-2 text-left\">User ID</th>\n                  <th className=\"border px-4 py-2 text-left\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {comments.map(comment => (\n                  <tr key={comment.id} className=\"hover:bg-gray-100\">\n                    <td className=\"border px-4 py-2\">{comment.id}</td>\n                    <td className=\"border px-4 py-2\">\n                      <div>\n                        {comment.content}\n                        <br />\n                        <small className=\"text-gray-500\">\n                          {new Date(comment.createdAt).toLocaleString()}\n                        </small>\n                      </div>\n                    </td>\n                    <td className=\"border px-4 py-2\">{comment.ticketTitle || 'N/A'}</td>\n                    <td className=\"border px-4 py-2\">{comment.username || 'N/A'}</td>\n                    <td className=\"border px-4 py-2\">\n                      {/* Edit button removed as per request to disable edit option for admin */}\n                      {/* <button\n                        onClick={() => handleEditComment(comment.id, comment.content)}\n                        className=\"bg-yellow-400 text-white px-2 py-1 rounded mr-2\"\n                      >\n                        Edit\n                      </button> */}\n                      <button\n                        onClick={() => deleteComment(comment.id)}\n                        className=\"bg-red-600 text-white px-2 py-1 rounded\"\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n\n            {editCommentId !== null && (\n              <div className=\"mt-4\">\n                <textarea\n                  value={editCommentText}\n                  onChange={(e) => setEditCommentText(e.target.value)}\n                  className=\"w-full border border-gray-300 rounded p-2\"\n                  rows={4}\n                />\n                <button\n                  onClick={handleUpdateComment}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded mt-2\"\n                >\n                  Update Comment\n                </button>\n                <button\n                  onClick={() => setEditCommentId(null)}\n                  className=\"ml-2 bg-gray-400 text-white px-4 py-2 rounded mt-2\"\n                >\n                  Cancel\n                </button>\n              </div>\n            )}\n          </section>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default AdminDashboard;\n// import React, { useState, useEffect } from 'react';\n// import AdminSidebar from './AdminSidebar';\n\n// function AdminDashboard({ token, userId }) {\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [users, setUsers] = useState([]);\n//   const [tickets, setTickets] = useState([]);\n//   const [openTickets, setOpenTickets] = useState([]);\n//   const [comments, setComments] = useState([]);\n//   const [newComment, setNewComment] = useState('');\n//   const [editCommentId, setEditCommentId] = useState(null);\n//   const [editCommentText, setEditCommentText] = useState('');\n//   const [selectedTicketAssign, setSelectedTicketAssign] = useState(null);\n//   const [selectedAgent, setSelectedAgent] = useState(null);\n//   const [availableAgents, setAvailableAgents] = useState([]);\n//   const [showTickets, setShowTickets] = useState(true);\n//   const [activeSection, setActiveSection] = useState('viewUsers');\n//   const [profile, setProfile] = useState(null);\n\n//   useEffect(() => {\n//     console.log(\"useEffect triggered for activeSection:\", activeSection);\n//     if (!token) return;\n//     if (activeSection === 'viewComments') {\n//       console.log(\"Fetching comments for admin view\");\n//       setLoading(true);\n//       const authHeader = `Bearer ${token}`;\n//       fetch('http://localhost:8080/api/comments/getcomments', {\n//         headers: { Authorization: authHeader }\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to fetch comments');\n//           return res.json();\n//         })\n//         .then(data => {\n//           setComments(data);\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message))\n//         .finally(() => setLoading(false));\n//     } else {\n//       setLoading(true);\n//       const authHeader = `Bearer ${token}`;\n\n//       fetch('http://localhost:8080/api/users', {\n//         headers: { Authorization: authHeader },\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to fetch users');\n//           return res.json();\n//         })\n//         .then(data => {\n//           setUsers(data);\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message))\n//         .finally(() => setLoading(false));\n\n//       fetch('http://localhost:8080/api/tickets/gettickets', {\n//         headers: { Authorization: authHeader },\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to fetch tickets');\n//           return res.json();\n//         })\n//         .then(data => {\n//           setTickets(data);\n//           setOpenTickets(data.filter(ticket => ticket.state === 'OPEN'));\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message))\n//         .finally(() => setLoading(false));\n//     }\n//   }, [token, activeSection]);\n\n//   useEffect(() => {\n//     if (activeSection === 'viewProfile' && userId && token) {\n//       setLoading(true);\n//       fetch(`http://localhost:8080/api/users/${userId}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to fetch profile');\n//           return res.json();\n//         })\n//         .then(data => {\n//           setProfile(data);\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message))\n//         .finally(() => setLoading(false));\n//     }\n//   }, [activeSection, userId, token]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     const authHeader = `Bearer ${token}`;\n//     fetch('http://localhost:8080/api/users/agents', {\n//       headers: { Authorization: authHeader },\n//     })\n//       .then(res => {\n//         if (!res.ok) throw new Error('Failed to fetch agents');\n//         return res.json();\n//       })\n//       .then(data => {\n//         setAvailableAgents(data);\n//         setError(null);\n//       })\n//       .catch(err => setError(err.message));\n//   }, [token]);\n\n//   const handleAddComment = () => {\n//     if (newComment.trim() && selectedTicketAssign) {\n//       fetch(`http://localhost:8080/api/comments/ticket/${selectedTicketAssign}`, {\n//         method: 'POST',\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           content: newComment,\n//         }),\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to add comment');\n//           return res.json();\n//         })\n//         .then(newCommentData => {\n//           setComments(prev => [...prev, newCommentData]);\n//           setNewComment('');\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message));\n//     }\n//   };\n\n//   const handleEditComment = (commentId, text) => {\n//     setEditCommentId(commentId);\n//     setEditCommentText(text);\n//   };\n\n//   const handleUpdateComment = () => {\n//     if (editCommentText.trim() && editCommentId !== null) {\n//       fetch(`http://localhost:8080/api/comments/${editCommentId}`, {\n//         method: 'PUT',\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ content: editCommentText }),\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to update comment');\n//           return res.json();\n//         })\n//         .then(updatedComment => {\n//           setComments(prev =>\n//             prev.map(comment =>\n//               comment.id === editCommentId ? updatedComment : comment\n//             )\n//           );\n//           setEditCommentId(null);\n//           setEditCommentText('');\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message));\n//     }\n//   };\n\n//   const deleteComment = (id) => {\n//     fetch(`http://localhost:8080/api/comments/${id}`, {\n//       method: 'DELETE',\n//       headers: { Authorization: `Bearer ${token}` },\n//     })\n//       .then(() => setComments(comments.filter(comment => comment.id !== id)))\n//       .catch(err => setError(err.message));\n//   };\n\n//   const assignTicket = () => {\n//     if (selectedTicketAssign && selectedAgent) {\n//       fetch(`http://localhost:8080/api/tickets/${selectedTicketAssign}/assign/${selectedAgent}`, {\n//         method: 'PUT',\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           'Content-Type': 'application/json',\n//         },\n//       })\n//         .then(res => {\n//           if (!res.ok) throw new Error('Failed to assign ticket');\n//           setTickets(prev =>\n//             prev.map(ticket =>\n//               ticket.id === parseInt(selectedTicketAssign)\n//                 ? { ...ticket, assignedAgent: { id: parseInt(selectedAgent) } }\n//                 : ticket\n//             )\n//           );\n//           setSelectedTicketAssign(null);\n//           setSelectedAgent(null);\n//           setError(null);\n//         })\n//         .catch(err => setError(err.message));\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex min-h-screen font-poppins bg-gray-100\">\n//       <AdminSidebar onSelect={setActiveSection} />\n//       <main className=\"flex-grow p-8 ml-64 max-w-6xl mx-auto\">\n\n//         {error && <p className=\"text-red-600 mb-4\">{error}</p>}\n\n// {activeSection === 'viewUsers' && (\n//   <section className=\"mb-8\">\n//     <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Users</h2>\n//     <table className=\"min-w-full bg-white border border-gray-300 rounded\">\n//       <thead>\n//         <tr>\n//           <th className=\"border px-4 py-2 text-left\">ID</th>\n//           <th className=\"border px-4 py-2 text-left\">Username</th>\n//           <th className=\"border px-4 py-2 text-left\">Role</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {users.map(user => (\n//           <tr key={user.id} className=\"hover:bg-gray-100\">\n//             <td className=\"border px-4 py-2\">{user.id}</td>\n//             <td className=\"border px-4 py-2\">{user.username}</td>\n//             <td className=\"border px-4 py-2\">{user.role}</td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   </section>\n// )}\n\n//         {activeSection === 'viewTickets' && (\n//           <>\n//             <section className=\"mb-8\">\n//               <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Tickets (Total: {tickets.length})</h2>\n//               <table className=\"min-w-full bg-white border border-gray-300 rounded\">\n//               <thead>\n//                 <tr>\n//                   <th className=\"border px-4 py-2 text-left\">ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">Title</th>\n//                   <th className=\"border px-4 py-2 text-left\">Description</th>\n//                   <th className=\"border px-4 py-2 text-left\">Status</th>\n//                   <th className=\"border px-4 py-2 text-left\">Created By ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">Agent ID</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {tickets.map(ticket => (\n//                   <tr key={ticket.id} className=\"hover:bg-gray-100\">\n//                     <td className=\"border px-4 py-2\">{ticket.id}</td>\n//                     <td className=\"border px-4 py-2\">{ticket.title}</td>\n//                     <td className=\"border px-4 py-2\">{ticket.description}</td>\n//                     <td className=\"border px-4 py-2\">{ticket.state}</td>\n//                     <td className=\"border px-4 py-2\">{ticket.createdBy ? ticket.createdBy.id : 'null'}</td>\n//                     <td className=\"border px-4 py-2\">\n//                       {ticket.assignedAgent\n//                         ? ticket.assignedAgent.id\n//                         : ticket.state === 'ASSIGNED'\n//                         ? 'Assigned'\n//                         : 'Unassigned'}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//               </table>\n//             </section>\n//           </>\n//         )}\n\n//         {activeSection === 'assignTickets' && (\n//           <section className=\"mb-8\">\n//             <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Assign Tickets</h2>\n//             <div className=\"mb-4\">\n//               <label htmlFor=\"ticketSelect\" className=\"block mb-1 font-medium\">Select Ticket</label>\n//               <select\n//                 id=\"ticketSelect\"\n//                 value={selectedTicketAssign || ''}\n//                 onChange={(e) => setSelectedTicketAssign(e.target.value)}\n//                 className=\"border border-gray-300 rounded px-3 py-2 w-full max-w-xs\"\n//               >\n//                 <option value=\"\" disabled>Select a ticket</option>\n//                 {openTickets.map(ticket => (\n//                   <option key={ticket.id} value={ticket.id}>\n//                     {ticket.title} (Assigned to: {ticket.assignedAgent ? ticket.assignedAgent.username : 'Unassigned'})\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"mb-4\">\n//               <label htmlFor=\"agentSelect\" className=\"block mb-1 font-medium\">Assign to Agent</label>\n//               <select\n//                 id=\"agentSelect\"\n//                 value={selectedAgent || ''}\n//                 onChange={(e) => setSelectedAgent(e.target.value)}\n//                 className=\"border border-gray-300 rounded px-3 py-2 w-full max-w-xs\"\n//               >\n//                 <option value=\"\" disabled>Select an agent</option>\n//                 {availableAgents.map(agent => (\n//                   <option key={agent.id} value={agent.id}>{agent.username}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <button\n//               onClick={assignTicket}\n//               disabled={!selectedTicketAssign || !selectedAgent}\n//               className=\"bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n//             >\n//               Assign Ticket\n//             </button>\n//           </section>\n//         )}\n\n//         {activeSection === 'viewProfile' && (\n//           <section className=\"mb-8 flex flex-col items-center justify-center\">\n//             <h2 className=\"text-3xl font-semibold mb-6 text-blue-800\">Profile</h2>\n//             {loading && <p>Loading profile...</p>}\n//             {error && <p className=\"text-red-600\">{error}</p>}\n//             {profile && (\n//               <div className=\"flex flex-col items-center bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\n//                 <div className=\"mb-6\">\n//                 <div className=\"w-24 h-24 rounded-full bg-blue-600 flex items-center justify-center shadow-lg mx-auto overflow-hidden\">\n//                   <img\n//                     src=\"download.jpeg\"\n//                     alt=\"Profile Icon\"\n//                     className=\"w-full h-full object-cover\"\n//                   />\n//                 </div>\n//                 </div>\n//                 <div className=\"text-center\">\n//                   <p className=\"text-lg font-medium\"><strong>ID:</strong> {profile.id}</p>\n//                   <p className=\"text-lg font-medium\"><strong>Username:</strong> {profile.username}</p>\n//                   <p className=\"text-lg font-medium\"><strong>Email:</strong> {profile.email}</p>\n//                   <p className=\"text-lg font-medium\"><strong>Role:</strong> {profile.role}</p>\n//                 </div>\n//               </div>\n//             )}\n//           </section>\n//         )}\n\n//         {activeSection === 'viewComments' && (\n//           <section className=\"mb-8\">\n//             <h2 className=\"text-2xl font-semibold mb-4 text-blue-800\">Comments</h2>\n//             <table className=\"min-w-full bg-white border border-gray-300 rounded\">\n//               <thead>\n//                 <tr>\n//                   <th className=\"border px-4 py-2 text-left\">ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">Content</th>\n//                   <th className=\"border px-4 py-2 text-left\">Ticket ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">User ID</th>\n//                   <th className=\"border px-4 py-2 text-left\">Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {comments.map(comment => (\n//                   <tr key={comment.id} className=\"hover:bg-gray-100\">\n//                     <td className=\"border px-4 py-2\">{comment.id}</td>\n//                     <td className=\"border px-4 py-2\">\n//                       <div>\n//                         {comment.content}\n//                         <br />\n//                         <small className=\"text-gray-500\">\n//                           {new Date(comment.createdAt).toLocaleString()}\n//                         </small>\n//                       </div>\n//                     </td>\n//                     <td className=\"border px-4 py-2\">{comment.ticketTitle || 'N/A'}</td>\n//                     <td className=\"border px-4 py-2\">{comment.username || 'N/A'}</td>\n//                     <td className=\"border px-4 py-2\">\n//                       {/* Edit button removed as per request to disable edit option for admin */}\n//                       {/* <button\n//                         onClick={() => handleEditComment(comment.id, comment.content)}\n//                         className=\"bg-yellow-400 text-white px-2 py-1 rounded mr-2\"\n//                       >\n//                         Edit\n//                       </button> */}\n//                       <button\n//                         onClick={() => deleteComment(comment.id)}\n//                         className=\"bg-red-600 text-white px-2 py-1 rounded\"\n//                       >\n//                         Delete\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {editCommentId !== null && (\n//               <div className=\"mt-4\">\n//                 <textarea\n//                   value={editCommentText}\n//                   onChange={(e) => setEditCommentText(e.target.value)}\n//                   className=\"w-full border border-gray-300 rounded p-2\"\n//                   rows={4}\n//                 />\n//                 <button\n//                   onClick={handleUpdateComment}\n//                   className=\"bg-blue-600 text-white px-4 py-2 rounded mt-2\"\n//                 >\n//                   Update Comment\n//                 </button>\n//                 <button\n//                   onClick={() => setEditCommentId(null)}\n//                   className=\"ml-2 bg-gray-400 text-white px-4 py-2 rounded mt-2\"\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             )}\n//           </section>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}