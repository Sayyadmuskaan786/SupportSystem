{"ast":null,"code":"var _jsxFileName = \"/home/muskaan/Desktop/Summer_Internship/new/src/components/GoogleLoginButton.js\";\nimport React from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GoogleLoginButton = ({\n  onLoginSuccess,\n  onLoginFailure\n}) => {\n  const handleLoginSuccess = async credentialResponse => {\n    try {\n      const idToken = credentialResponse.credential;\n      const response = await fetch('http://localhost:8080/api/auth/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idToken\n        }) // Send as JSON object with idToken field\n      });\n      if (!response.ok) throw new Error('Google login failed');\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      onLoginSuccess(data);\n    } catch (error) {\n      console.error(error);\n      onLoginFailure(error);\n    }\n  };\n\n  // Helper function to get token from localStorage\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  // Example of making an authenticated API call with the token\n  const fetchProtectedData = async () => {\n    const token = getToken();\n    if (!token) {\n      console.error('No token found');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/protected-endpoint', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch protected data');\n      const data = await response.json();\n      console.log('Protected data:', data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleLoginSuccess,\n      onError: () => onLoginFailure(new Error('Google login failed')),\n      useOneTap: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchProtectedData,\n      children: \"Fetch Protected Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = GoogleLoginButton;\nexport default GoogleLoginButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"names":["React","GoogleLogin","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleLoginButton","onLoginSuccess","onLoginFailure","handleLoginSuccess","credentialResponse","idToken","credential","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","localStorage","setItem","token","error","console","getToken","getItem","fetchProtectedData","log","children","onSuccess","onError","useOneTap","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/muskaan/Desktop/Summer_Internship/new/src/components/GoogleLoginButton.js"],"sourcesContent":["import React from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\n\nconst GoogleLoginButton = ({ onLoginSuccess, onLoginFailure }) => {\n  const handleLoginSuccess = async (credentialResponse) => {\n    try {\n      const idToken = credentialResponse.credential;\n\n      const response = await fetch('http://localhost:8080/api/auth/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ idToken })  // Send as JSON object with idToken field\n      });\n\n      if (!response.ok) throw new Error('Google login failed');\n\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      onLoginSuccess(data);\n    } catch (error) {\n      console.error(error);\n      onLoginFailure(error);\n    }\n  };\n\n  // Helper function to get token from localStorage\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  // Example of making an authenticated API call with the token\n  const fetchProtectedData = async () => {\n    const token = getToken();\n    if (!token) {\n      console.error('No token found');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/protected-endpoint', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch protected data');\n      const data = await response.json();\n      console.log('Protected data:', data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <GoogleLogin\n        onSuccess={handleLoginSuccess}\n        onError={() => onLoginFailure(new Error('Google login failed'))}\n        useOneTap\n      />\n      {/* Example button to test authenticated API call */}\n      <button onClick={fetchProtectedData}>Fetch Protected Data</button>\n    </>\n  );\n};\n\nexport default GoogleLoginButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAe,CAAC,KAAK;EAChE,MAAMC,kBAAkB,GAAG,MAAOC,kBAAkB,IAAK;IACvD,IAAI;MACF,MAAMC,OAAO,GAAGD,kBAAkB,CAACE,UAAU;MAE7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER;QAAQ,CAAC,CAAC,CAAE;MACrC,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MAExD,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;MACzCnB,cAAc,CAACe,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBnB,cAAc,CAACmB,KAAK,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrB,OAAOL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EACtC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAML,KAAK,GAAGG,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACH,KAAK,EAAE;MACVE,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAC;MAC/B;IACF;IACA,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUU,KAAK;QAClC;MACF,CAAC,CAAC;MACF,IAAI,CAACb,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACnE,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCK,OAAO,CAACI,GAAG,CAAC,iBAAiB,EAAEV,IAAI,CAAC;IACtC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACExB,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACE9B,OAAA,CAACF,WAAW;MACViC,SAAS,EAAEzB,kBAAmB;MAC9B0B,OAAO,EAAEA,CAAA,KAAM3B,cAAc,CAAC,IAAIa,KAAK,CAAC,qBAAqB,CAAC,CAAE;MAChEe,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAEFrC,OAAA;MAAQsC,OAAO,EAAEV,kBAAmB;MAAAE,QAAA,EAAC;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAClE,CAAC;AAEP,CAAC;AAACE,EAAA,GA9DIpC,iBAAiB;AAgEvB,eAAeA,iBAAiB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}