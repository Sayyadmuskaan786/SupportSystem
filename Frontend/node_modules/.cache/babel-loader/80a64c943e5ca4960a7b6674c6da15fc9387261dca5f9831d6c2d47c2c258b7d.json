{"ast":null,"code":"var _jsxFileName = \"/home/muskaan/Desktop/Summer_Internship/new/src/CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomerDashboard({\n  authHeader\n}) {\n  _s();\n  const [customerId, setCustomerId] = useState(null);\n  const [tickets, setTickets] = useState([]);\n  const [newTicketTitle, setNewTicketTitle] = useState('');\n  const [selectedTicketId, setSelectedTicketId] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editCommentText, setEditCommentText] = useState('');\n  useEffect(() => {\n    if (!authHeader) return;\n\n    // Fetch current user info to get customerId\n    fetch('http://localhost:8080/api/users', {\n      headers: {\n        'Authorization': authHeader\n      }\n    }).then(res => res.json()).then(users => {\n      // Find user matching username in authHeader (decode base64)\n      const base64Credentials = authHeader.split(' ')[1];\n      const credentials = atob(base64Credentials).split(':');\n      const username = credentials[0];\n      const user = users.find(u => u.username === username);\n      if (user) {\n        setCustomerId(user.id);\n      }\n    }).catch(err => console.error('Error fetching users:', err));\n  }, [authHeader]);\n  useEffect(() => {\n    if (!authHeader || !customerId) return;\n\n    // Fetch tickets created by this customer\n    fetch('http://localhost:8080/api/tickets', {\n      headers: {\n        'Authorization': authHeader\n      }\n    }).then(res => res.json()).then(data => {\n      const customerTickets = data.filter(ticket => ticket.createdBy === customerId);\n      setTickets(customerTickets);\n    }).catch(err => console.error('Error fetching tickets:', err));\n  }, [authHeader, customerId]);\n  const handleCreateTicket = () => {\n    if (newTicketTitle.trim() && customerId) {\n      fetch('http://localhost:8080/api/tickets', {\n        method: 'POST',\n        headers: {\n          'Authorization': authHeader,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: newTicketTitle,\n          createdBy: customerId,\n          state: 'open'\n        })\n      }).then(res => res.json()).then(newTicket => {\n        setTickets([...tickets, newTicket]);\n        setNewTicketTitle('');\n      }).catch(err => console.error('Error creating ticket:', err));\n    }\n  };\n  const handleAddComment = () => {\n    if (newComment.trim() && selectedTicketId) {\n      fetch('http://localhost:8080/api/comments', {\n        method: 'POST',\n        headers: {\n          'Authorization': authHeader,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ticketId: selectedTicketId,\n          text: newComment\n        })\n      }).then(res => res.json()).then(newCommentData => {\n        setTickets(tickets.map(ticket => {\n          if (ticket.id === selectedTicketId) {\n            return {\n              ...ticket,\n              comments: [...ticket.comments, newCommentData]\n            };\n          }\n          return ticket;\n        }));\n        setNewComment('');\n      }).catch(err => console.error('Error adding comment:', err));\n    }\n  };\n  const handleEditComment = (ticketId, commentId, text) => {\n    setSelectedTicketId(ticketId);\n    setEditCommentId(commentId);\n    setEditCommentText(text);\n  };\n  const handleUpdateComment = () => {\n    if (editCommentText.trim() && selectedTicketId && editCommentId !== null) {\n      fetch(`http://localhost:8080/api/comments/${editCommentId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': authHeader,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: editCommentText\n        })\n      }).then(res => {\n        if (res.ok) {\n          setTickets(tickets.map(ticket => {\n            if (ticket.id === selectedTicketId) {\n              return {\n                ...ticket,\n                comments: ticket.comments.map(comment => comment.id === editCommentId ? {\n                  ...comment,\n                  text: editCommentText\n                } : comment)\n              };\n            }\n            return ticket;\n          }));\n          setEditCommentId(null);\n          setEditCommentText('');\n        } else {\n          console.error('Failed to update comment');\n        }\n      }).catch(err => console.error('Error updating comment:', err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Customer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-2\",\n        children: \"Create Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ticket title\",\n        value: newTicketTitle,\n        onChange: e => setNewTicketTitle(e.target.value),\n        className: \"border border-gray-300 rounded px-3 py-2 w-full max-w-md mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateTicket,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-4 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: ticket.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-1\",\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc pl-5 mb-2\",\n            children: ticket.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex items-center justify-between\",\n              children: editCommentId === comment.id && selectedTicketId === ticket.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editCommentText,\n                  onChange: e => setEditCommentText(e.target.value),\n                  className: \"border border-gray-300 rounded px-2 py-1 mr-2 flex-grow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleUpdateComment,\n                  className: \"bg-green-600 text-white px-2 py-1 rounded\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: comment.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEditComment(ticket.id, comment.id, comment.text),\n                  className: \"text-blue-600 hover:underline ml-2\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, comment.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a comment\",\n              value: newComment,\n              onChange: e => setNewComment(e.target.value),\n              className: \"border border-gray-300 rounded px-2 py-1 flex-grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddComment,\n              className: \"bg-blue-600 text-white px-4 py-1 rounded\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, ticket.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerDashboard, \"pbEQ/iW5ZfNT/ODAXFI65E8JRGk=\");\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerDashboard","authHeader","_s","customerId","setCustomerId","tickets","setTickets","newTicketTitle","setNewTicketTitle","selectedTicketId","setSelectedTicketId","newComment","setNewComment","editCommentId","setEditCommentId","editCommentText","setEditCommentText","fetch","headers","then","res","json","users","base64Credentials","split","credentials","atob","username","user","find","u","id","catch","err","console","error","data","customerTickets","filter","ticket","createdBy","handleCreateTicket","trim","method","body","JSON","stringify","title","state","newTicket","handleAddComment","ticketId","text","newCommentData","map","comments","handleEditComment","commentId","handleUpdateComment","ok","comment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/muskaan/Desktop/Summer_Internship/new/src/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CustomerDashboard({ authHeader }) {\n  const [customerId, setCustomerId] = useState(null);\n  const [tickets, setTickets] = useState([]);\n  const [newTicketTitle, setNewTicketTitle] = useState('');\n  const [selectedTicketId, setSelectedTicketId] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editCommentText, setEditCommentText] = useState('');\n\n  useEffect(() => {\n    if (!authHeader) return;\n\n    // Fetch current user info to get customerId\n    fetch('http://localhost:8080/api/users', {\n      headers: {\n        'Authorization': authHeader,\n      },\n    })\n      .then(res => res.json())\n      .then(users => {\n        // Find user matching username in authHeader (decode base64)\n        const base64Credentials = authHeader.split(' ')[1];\n        const credentials = atob(base64Credentials).split(':');\n        const username = credentials[0];\n        const user = users.find(u => u.username === username);\n        if (user) {\n          setCustomerId(user.id);\n        }\n      })\n      .catch(err => console.error('Error fetching users:', err));\n  }, [authHeader]);\n\n  useEffect(() => {\n    if (!authHeader || !customerId) return;\n\n    // Fetch tickets created by this customer\n    fetch('http://localhost:8080/api/tickets', {\n      headers: {\n        'Authorization': authHeader,\n      },\n    })\n      .then(res => res.json())\n      .then(data => {\n        const customerTickets = data.filter(ticket => ticket.createdBy === customerId);\n        setTickets(customerTickets);\n      })\n      .catch(err => console.error('Error fetching tickets:', err));\n  }, [authHeader, customerId]);\n\n  const handleCreateTicket = () => {\n    if (newTicketTitle.trim() && customerId) {\n      fetch('http://localhost:8080/api/tickets', {\n        method: 'POST',\n        headers: {\n          'Authorization': authHeader,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title: newTicketTitle,\n          createdBy: customerId,\n          state: 'open',\n        }),\n      })\n        .then(res => res.json())\n        .then(newTicket => {\n          setTickets([...tickets, newTicket]);\n          setNewTicketTitle('');\n        })\n        .catch(err => console.error('Error creating ticket:', err));\n    }\n  };\n\n  const handleAddComment = () => {\n    if (newComment.trim() && selectedTicketId) {\n      fetch('http://localhost:8080/api/comments', {\n        method: 'POST',\n        headers: {\n          'Authorization': authHeader,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ticketId: selectedTicketId,\n          text: newComment,\n        }),\n      })\n        .then(res => res.json())\n        .then(newCommentData => {\n          setTickets(tickets.map(ticket => {\n            if (ticket.id === selectedTicketId) {\n              return {\n                ...ticket,\n                comments: [...ticket.comments, newCommentData],\n              };\n            }\n            return ticket;\n          }));\n          setNewComment('');\n        })\n        .catch(err => console.error('Error adding comment:', err));\n    }\n  };\n\n  const handleEditComment = (ticketId, commentId, text) => {\n    setSelectedTicketId(ticketId);\n    setEditCommentId(commentId);\n    setEditCommentText(text);\n  };\n\n  const handleUpdateComment = () => {\n    if (editCommentText.trim() && selectedTicketId && editCommentId !== null) {\n      fetch(`http://localhost:8080/api/comments/${editCommentId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': authHeader,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text: editCommentText }),\n      })\n        .then(res => {\n          if (res.ok) {\n            setTickets(tickets.map(ticket => {\n              if (ticket.id === selectedTicketId) {\n                return {\n                  ...ticket,\n                  comments: ticket.comments.map(comment =>\n                    comment.id === editCommentId ? { ...comment, text: editCommentText } : comment\n                  ),\n                };\n              }\n              return ticket;\n            }));\n            setEditCommentId(null);\n            setEditCommentText('');\n          } else {\n            console.error('Failed to update comment');\n          }\n        })\n        .catch(err => console.error('Error updating comment:', err));\n    }\n  };\n\n  return (\n    <div className=\"p-8\">\n      <h1 className=\"text-3xl font-bold mb-6\">Customer Dashboard</h1>\n\n      {/* Create Ticket */}\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-2\">Create Ticket</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Ticket title\"\n          value={newTicketTitle}\n          onChange={(e) => setNewTicketTitle(e.target.value)}\n          className=\"border border-gray-300 rounded px-3 py-2 w-full max-w-md mb-2\"\n        />\n        <button\n          onClick={handleCreateTicket}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded\"\n        >\n          Create\n        </button>\n      </div>\n\n      {/* Tickets List */}\n      <div className=\"space-y-6\">\n        {tickets.map(ticket => (\n          <div key={ticket.id} className=\"border p-4 rounded shadow\">\n            <h2 className=\"text-xl font-semibold mb-2\">{ticket.title}</h2>\n\n            <div>\n              <h3 className=\"font-semibold mb-1\">Comments:</h3>\n              <ul className=\"list-disc pl-5 mb-2\">\n                {ticket.comments.map(comment => (\n                  <li key={comment.id} className=\"flex items-center justify-between\">\n                    {editCommentId === comment.id && selectedTicketId === ticket.id ? (\n                      <>\n                        <input\n                          type=\"text\"\n                          value={editCommentText}\n                          onChange={(e) => setEditCommentText(e.target.value)}\n                          className=\"border border-gray-300 rounded px-2 py-1 mr-2 flex-grow\"\n                        />\n                        <button\n                          onClick={handleUpdateComment}\n                          className=\"bg-green-600 text-white px-2 py-1 rounded\"\n                        >\n                          Save\n                        </button>\n                      </>\n                    ) : (\n                      <>\n                        <span>{comment.text}</span>\n                        <button\n                          onClick={() => handleEditComment(ticket.id, comment.id, comment.text)}\n                          className=\"text-blue-600 hover:underline ml-2\"\n                        >\n                          Edit\n                        </button>\n                      </>\n                    )}\n                  </li>\n                ))}\n              </ul>\n              <div className=\"flex space-x-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Add a comment\"\n                  value={newComment}\n                  onChange={(e) => setNewComment(e.target.value)}\n                  className=\"border border-gray-300 rounded px-2 py-1 flex-grow\"\n                />\n                <button\n                  onClick={handleAddComment}\n                  className=\"bg-blue-600 text-white px-4 py-1 rounded\"\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CustomerDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}