{"ast":null,"code":"var _jsxFileName = \"/home/muskaan/Desktop/Summer_Internship/new/src/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Extract email from query params\n  const params = new URLSearchParams(location.search);\n  const email = params.get('email');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    if (newPassword !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      if (response.ok) {\n        setMessage('Password reset successful. Redirecting to login...');\n        setTimeout(() => {\n          navigate('/login');\n        }, 3000);\n      } else {\n        const errorText = await response.text();\n        setError('Password reset failed: ' + errorText);\n      }\n    } catch (err) {\n      setError('Password reset failed: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4 text-green-600\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4 text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), !message && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2 font-semibold\",\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        className: \"w-full border border-gray-300 rounded px-3 py-2 mb-4\",\n        required: true,\n        minLength: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2 font-semibold\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        className: \"w-full border border-gray-300 rounded px-3 py-2 mb-4\",\n        required: true,\n        minLength: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"YW9yUF0MG+OxEQ8gCO17owCmQdk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","navigate","location","params","URLSearchParams","search","email","get","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","setTimeout","errorText","text","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","minLength","_c","$RefreshReg$"],"sources":["/home/muskaan/Desktop/Summer_Internship/new/src/ResetPassword.js"],"sourcesContent":["    \nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction ResetPassword() {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Extract email from query params\n  const params = new URLSearchParams(location.search);\n  const email = params.get('email');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n\n    if (newPassword !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/reset-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, newPassword }),\n      });\n\n      if (response.ok) {\n        setMessage('Password reset successful. Redirecting to login...');\n        setTimeout(() => {\n          navigate('/login');\n        }, 3000);\n      } else {\n        const errorText = await response.text();\n        setError('Password reset failed: ' + errorText);\n      }\n    } catch (err) {\n      setError('Password reset failed: ' + err.message);\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-white rounded shadow\">\n      <h2 className=\"text-2xl font-bold mb-4\">Reset Password</h2>\n      {message && <p className=\"mb-4 text-green-600\">{message}</p>}\n      {error && <p className=\"mb-4 text-red-600\">{error}</p>}\n      {!message && (\n        <form onSubmit={handleSubmit}>\n          <label className=\"block mb-2 font-semibold\">New Password</label>\n          <input\n            type=\"password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            className=\"w-full border border-gray-300 rounded px-3 py-2 mb-4\"\n            required\n            minLength={6}\n          />\n          <label className=\"block mb-2 font-semibold\">Confirm Password</label>\n          <input\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            className=\"w-full border border-gray-300 rounded px-3 py-2 mb-4\"\n            required\n            minLength={6}\n          />\n          <button\n            type=\"submit\"\n            className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition\"\n          >\n            Reset Password\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}